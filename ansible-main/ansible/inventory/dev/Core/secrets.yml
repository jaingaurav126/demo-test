# ------------------------------------------------------------------------------------------------------------ #
# Mandatorty variables - DO NOT LEAVE ANYTHING BLANK #
core_vault_sunbird_encryption_key: "sunbird12345"       # Random string to encrypt data
core_vault_postgres_password: "sunbird12345"           # Update same password in dp secrets dp_vault_pgdb_admin_password  variable
core_vault_dp_pgdb_password: "sunbird12345"       #update same password in dp secrets dp_vault_pgdb_password  variable       
core_vault_sunbird_azure_storage_key: "ME7wIEh6GUHBx1oR3LrJnm9a3zIlEsVgj87ZX7XUfLn7xfwAc7v/h0wgd//zWDCC4yAKVKStcfdY+AStRah6KQ=="
core_vault_docker_registry_url: "https://index.docker.io/v1"      # for docker hub "https://index.docker.io/v1"
core_vault_docker_registry_user: "monojitdocker" 
core_vault_docker_registry_password: "dockerpwd1234"
learning_content_drive_apiKey: "AIzaSyDA84rNmCsrwWxtjOsawVmw0LytDCJ2MHY"
uci_encryption_key_base64: "bW9ub2ppdAo="

# Run the below command in shell
# date +'%Y-%m-%dT%H:%m:%SZ' -d '+1 year'
# sas_token=?`az storage account generate-sas --account-name "{{ azure_plugin_storage_account_name }}" --account-key "{{ azure_plugin_storage_account_key }}" --expiry $sas_expire_time --https-only --permissions acdlpruw --resource-types sco --services bfqt | xargs`
# generate a sas for the blob for entire storage accout with write and read access
artifact_azure_account_sas: "?sv=2021-06-08&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2022-10-03T15:21:48Z&st=2022-09-03T07:21:48Z&spr=https&sig=VPkkjzVF%2BE7I%2FodpCgqHyJMoNbrBUYQzJW6nvUXsCa0%3D"                                  # SAS token value generated from above command
sunbird_artifact_storage_account_sas: "?sv=2021-06-08&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2022-10-03T15:21:48Z&st=2022-09-03T07:21:48Z&spr=https&sig=VPkkjzVF%2BE7I%2FodpCgqHyJMoNbrBUYQzJW6nvUXsCa0%3D"                        # SAS token value generated from above command
sunbird_public_storage_account_sas: "?sv=2021-06-08&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2022-10-03T15:21:48Z&st=2022-09-03T07:21:48Z&spr=https&sig=VPkkjzVF%2BE7I%2FodpCgqHyJMoNbrBUYQzJW6nvUXsCa0%3D"                          # SAS token value generated from above command
sunbird_public_storage_account_key: "ME7wIEh6GUHBx1oR3LrJnm9a3zIlEsVgj87ZX7XUfLn7xfwAc7v/h0wgd//zWDCC4yAKVKStcfdY+AStRah6KQ=="
sunbird_private_storage_account_key: "ME7wIEh6GUHBx1oR3LrJnm9a3zIlEsVgj87ZX7XUfLn7xfwAc7v/h0wgd//zWDCC4yAKVKStcfdY+AStRah6KQ=="

# The proxy key and crt values should be padded to the right by a couple of spaces 
# Example:
# core_vault_proxy_site_key: |+
#    -----BEGIN PRIVATE KEY-----
#    MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDFrWgCrQPHcZ2I
#    UqvtIOY5lxlgU22+4BQbjMRN6NZn89AfWMUpRQOCoohPpTs0/JF+a20RI256gNkr
#    yxm5BleKMv9dovAUjPElrdsWsBq9XOFDzN7GJnWpyB7oFYOoqrbRNrvL/dTP/op/
#    -----END PRIVATE KEY-----
core_vault_proxy_site_key: |+
   -----BEGIN RSA PRIVATE KEY-----
   MIIEpQIBAAKCAQEAyHdENniSsyykQGuy9n5gON0KHfxOPdawtea1HCxPgQctFo3o
   qyVvbuEBWe9BZMQ1Vb1NJ//alIg8LrRzZIZLw9+px9HomV/7YwjV7rSsDTytGXl6
   Xwp9WiSYH5kppVWuXujGcMqdA2gZZBd2hJzwxcZ5iXQ+eVFOm4f9GlBXcMBg5QOS
   HvzL+CjEYre4UmvV0yWZVh2R5B7ExefAaXV9WEX3hjT9gTVDhQRghNdzrROXYiHM
   DQTMQYfnvBwo7Lpn0jqfnurUP79140bVy8kztExXfe15hOFPJ7bBGQUK/24Mf4t3
   ptEIIkALQvr0OqSMIvKZv2qHiQs3kNXrEJ4ODQIDAQABAoIBAEJz7uPTsmW87bIB
   QbEekY0oEPuBsPok2i1ijjUJp01RcKviXPenEDqEUita+aWKuVdzykjxMqc8Rh8B
   aKMxNZp34VNBDUcSn0XkHu7ja4lzzLn+IAezdXxVVyxaXIjXT1dc+LNZJxWDA6+/
   a2VolRQqyA09wJv8zP8X5Fo9uc7BEL/RGLUsrGVGzhryZLKQFWNHoTLgIgTbpexc
   wA7EeMDONp02Mew7UieN8e81S8A4H2SkfX/0SEA3TWbpN+Fd8/btUisYGZC1x2nz
   5T6sTafJci+TeA+n9H3El7VI8U0wLFg3y5j9Iym0urEWjPc2hxFj5JMZKk87bv0J
   Ol/0i+ECgYEA7bKu23lMOx75pup40r/xmGxjlvnRgyCzS9iGjZhh8JQUtbpeLpIQ
   bXKgk1Edu+QAQKfj6/laPTf+dfKCGPFOqxrYG73Je1KeTpOlZRZyspkOqfJpw5l3
   MX3Xyp75mFX5Bttec1RFmEmT+wURkvfkZfc1FEnaBF7ZyY+/Fqk50zkCgYEA1+ax
   g/Beu73R7OmEIUTKWILloyqK5rLzPwu5+L2giQQScBPT5WyT/KcrThD8CW2ozqoT
   bcss/VmZr9Z2Vjq5gWMUxvh+fUr7d8vuzDOm+5u3i3pon8/dN4guM8nfEFBg+8ka
   rAGnKXztAqJFLIseuLCZ/nc6o9kW1NWv+iILrXUCgYEA5gQiN1oizZdE6SQ+tVpu
   9Rv2J3QqLWUoe/3U/xJ1vDPf8pedah2IbhEdmFFHn7mcEPUmlwReMZ2MzSBWisKA
   aQ16ESZP4dnqPYmc5LybU37PdN+TP2ezsx3fA0FhsOuJJvyDYsEq85pH7AJUpk7i
   I1XcdHyez9nlkKpctRYfUekCgYEA1pwZjrZL5MEuQBprXgqcPNl43PV39xSg2OWW
   KhyMzEYA8emzsxV4ESg20rXtYo3fw/aps3TINtpu+6vqG5LqPSQ5TgNK8M6tIwrT
   R6Z8cRT7oSi/gURFeGLk0lPzaKsNjJr96UcHXCUzD3Av5LQxiJL7sEfiQWaU3GHB
   OJnJE9UCgYEAhQ2Nsm3Bh9FqA3bH0ZJFBfwPaRJ6PMlsPGKbdFnTgkzgM8B7cuao
   AaPMzqd3DRxml1D/sPTsUGWt069kww0anEk/6XGToM7rnE6LtNk4ts4P/OzP1RTV
   ktqShXiQQ27OZboTxX7HVUi3GSc9qTMq/273WRieEYwltDsClWMXuWY=
   -----END RSA PRIVATE KEY-----


core_vault_proxy_site_crt: |+
   -----BEGIN CERTIFICATE REQUEST-----
   MIIC8zCCAdsCAQAwZzELMAkGA1UEBhMCSU4xCzAJBgNVBAgMAldCMQwwCgYDVQQH
   DANLT0wxEDAOBgNVBAoMB1N1bmJpcmQxDzANBgNVBAsMBmRldm9wczEaMBgGA1UE
   AwwRKi5nY3B3a3NocGRldi5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
   AoIBAQDId0Q2eJKzLKRAa7L2fmA43Qod/E491rC15rUcLE+BBy0WjeirJW9u4QFZ
   70FkxDVVvU0n/9qUiDwutHNkhkvD36nH0eiZX/tjCNXutKwNPK0ZeXpfCn1aJJgf
   mSmlVa5e6MZwyp0DaBlkF3aEnPDFxnmJdD55UU6bh/0aUFdwwGDlA5Ie/Mv4KMRi
   t7hSa9XTJZlWHZHkHsTF58BpdX1YRfeGNP2BNUOFBGCE13OtE5diIcwNBMxBh+e8
   HCjsumfSOp+e6tQ/v3XjRtXLyTO0TFd97XmE4U8ntsEZBQr/bgx/i3em0QgiQAtC
   +vQ6pIwi8pm/aoeJCzeQ1esQng4NAgMBAAGgRzBFBgkqhkiG9w0BCQ4xODA2MAkG
   A1UdEwQCMAAwCwYDVR0PBAQDAgXgMBwGA1UdEQQVMBOCESouZ2Nwd2tzaHBkZXYu
   Y29tMA0GCSqGSIb3DQEBCwUAA4IBAQCAW95YVAzayDqPe2Uh0AUhM6uR0wV5My1s
   +pN3FKc1/YoN12LQGoSKK7rzapl7oNGQqG/gTbUuG7iEYMcQed3EZYwf09NjwYje
   CgMqM98zhSDYR8Dmams+Jpzb6/D3qLLyBo7N/t4UwsugjquO1NsOxpkh3Z3zz5iN
   5fmGd3iq5hsP6iVa1VsyWAwZwTRxhlkA2cdxK2/LGArMVBMqLXlbC/pDdyKHejDw
   iDS6Wj9DiDNzm7hLRVsa90usUeqD4h7weZnW13usgbYI6vbXHft+ihTGzEK5LyUV
   rTqd3vKlvj7a/xYEnPZAPNVHO0FQ5MHJRntWKBG+5kJ2uSRkLo9x
   -----END CERTIFICATE REQUEST-----

#Remove 
# core_vault_sunbird_api_auth_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI0NUhMOFJ4cE9TdTEyUFBqREJSSEZSUVpNdjNmemNvTyJ9.rmoy3BrPdIBswvOtD4Z_TddzfXIougN_zN2qHCodKTc" # Take the jwt token of api-admin consumer from Jenkins job console output after running OnboardConsumers - Use the same value in DP secrets.yml also for the variable sunbird_api_auth_token
core_vault_sunbird_api_auth_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJHM1ZZMU5PWTc0ZktjRTMxdFVscFFVRnR0WGtETTFKeSJ9.RlCg2kysw-k5gTrEnYvPl0tzd7ow6nGJuyjF3GC_Cqo"

# Keycloak client secret uuids
# You can generate unique ids using the below command
# sudo apt install uuid-runtime
# uuidgen
sunbird_trampoline_android_keycloak_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"               # Keycloak trampoline-android client secret
sunbird_trampoline_desktop_keycloak_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"               # Keycloak trampoline-desktop client secret
core_vault_sunbird_google_keycloak_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                # Keycloak google-auth client secret
core_vault_nodebb_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                                 # Keycloak nodebb client secret
core_vault_android_keycloak_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                       # Keycloak android client secret
core_vault_desktop_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                                # Keycloak desktop client secret
sunbird_google_android_keycloak_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                   # Keycloak google auth android client secret
sunbird_google_desktop_keycloak_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                   # Keycloak google auth desktop client secret
core_vault_sunbird_sso_client_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                     # Keycloak lms client secret
core_vault_sunbird_trampoline_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                     # Keycloak trampoline client secret
core_vault_sunbird_keycloak_user_federation_provider_id: "33c6ed72-29f6-4370-91b5-283d894b27a9"  # Keycloak cassandra federation id
core_vault_android_secret: "33c6ed72-29f6-4370-91b5-283d894b27a9"                                # Keycloak android client secret

#Remove
# core_vault_sunbird_sso_publickey: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgdqQTzYyKH11i/1juHkVyjwwrZpWliOLZH1maoUCqm4FJKp8WnVSPeNendY1Y1MristXL8miyTT1QqH5m/S+UlfRZ73FVyy1BkkIdxveWtyJKVtzoGOksFp5WrVWs6HHv60OtW21oSnsgcEvS/P55b7C7UM0GZt2LDF0yqUflk3Z3f33z7m1iwQMbJ6IMOIYE5IX3ekhCLFFR2fih8VFJqPaJLVoP97Q4IwcF/xIOKtIuxrvF3DOE510dhEAXZFw7o/BDSJTesbifXiSz9ImBoSvBHTFyTsYOyQb0ImDiRVTAUt+w738q4pOwYPJ2lFCoe/Xs04zF+WVJ4saKllvxwIDAQAB" # Public key of keycloak sunbird realm, update this post keycloak deployment.  See below for steps
core_vault_sunbird_sso_publickey: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkefzN59iRoAH8ShRI0frjhZ2y2g1CUwxojJuPehXeQ3CYvYbliwW1HF5JdqU0GrZjhfHf/4OqZPxejQkpYwklvZtkbnZnHODLWNKYSxQn66RlxEjaKq0jMEAYh9RnHlI/nRQg1FS4iaKQPG5JDozgQkvtUkfyFyNdxs5xEZlOHcl6SfnoGK6xbWZgdbLwb5T848mtcHSWxrEVXrd7kfTsJVXUeQ1NEv04+B5NdsN6AAFG/L0gffNJLdK/PVnZlJqpDpqGimJGbhqxWwwiEp/SH4eMjPPK8wpv9Rl4Q/MUWdnVhjWAlplz+uyNZ5kaeS3Bkeu2+76JvUwsfsrUErbuQIDAQAB"
# SSH tunnel to the keycloak VM by running ssh -L 8080:<keycloak machine ip>:8080 deployer@Keycloak-VM-IP
# If you cannot tunnel directly to Keycloak VM, then tunnel to Jenkins first and then tunnel to Keycloak VM from jenkins
# 
# Go to http://localhost:8080/auth/admin/master/console/#/realms/sunbird/clients -> lms -> service account roles -> Click on client roles drop down -> Select realm-management -> Select manage-users in Available Roles -> Click on Add selected
# 
# Go to http://localhost:8080/auth/admin/master/console/#/realms/sunbird/keys
# Click on Public Key and update the variable
#
# Go to http://localhost:8080/auth/admin/master/console/#/realms/master/login-settings and set the Require SSL to external requests

#Remove
# adminutil_refresh_token_public_key_kid: "RgEQIR5YvTn7Gb580gZ4GGpF-126my6z8RaNjyeJnNg"   # get after keycloak deployment, go to http://localhost:8080/auth/admin/master/console/#/realms/sunbird/keys and use the Kid of the RS256 token
adminutil_refresh_token_public_key_kid: "16lgJXcxImkIfU9EqCDBAXuDZUrYYbMZSiFBioqaMcU"

#Remove
#SELECT value FROM component_config CC INNER JOIN component C ON(CC.component_id = C.id) WHERE C.realm_id = 'sunbird' and provider_id = 'hmac-generated' AND CC.name = 'secret';
# adminutil_refresh_token_secret_key: "LMMlvPwLfdPH4s1fI5hhAbQUTrjFnowzBqf4-dHai-U889ovQPihJISDYtvvUi2PJMmw0IvZ1adW70RFZ9pjJg"  # get after Keycloak deployment from postgres using the above query
adminutil_refresh_token_secret_key: "R8xBSfMc6inQwM6Ivgqtq-Q8Fihfi0SiFtHV7CWv7sYYqW0OQ5V12VWROlO74PfMMtHSMpyY2s0jxFBG58FFyg"


# mongodb keyfile content generated using
# 'openssl rand -base64 741'
# eg:
mongodb_keyfile_content: |
  dzKXABmKNvuhvsbQud1jn84BMrRJdJb92TQbDV+HVAQXt1ATBssnTIJp6DtL1c/H
  GHjoOQBuDv1MfymFWxE10dXBlx1IG/pQDeTtC+AOrgyYvIQZNfxHIEfyLao14ZLT
  8sV6GAlQQzJFSHGqg174iniZpiibuj8Q7zqGlJgu/4MwcOBSflTlcCbYjkBErBff
  +XBi7hNNcPfIizB6XuYwsY59XCLH/g2S3g9aitbunyCAAQUpyFfnOvMezliFlDDh
  surRP/lpZ1ZzHtLni2Og8dbOj4J7TLauESd/8Bq+jLzhtBpVn0HoxxF5Se/++z+I
  ZfK4fSR2y2uyBSbQJmGZYnlRi4iTN/LGpSg2iZVzOQhUUBvBgYdWSkkYLbl2xTni
  d+BbwGnuvSs1gPXaokKqS6IF9zUGK9V2aW0a9qRHGjv3fJXQqB7zRvc1ciJjUwpI
  ISsbvlxmZLeDvnQJB3evf/7itSLqNwxMDybn28Ig0E5xBqGCcFbjNjvkkyZPf3YX
  +nI/gkSLYCPTFsnFaJSBrRxMn6c4iOwU1zc7GAg9KUuqF/ttLv8SZuooRsEZQsif
  zrxXgUHoqkx0WDZiwz91D3VD4hjwSWa3TLEFy8R9ZeSLv0sDihKlPYvW9HlQuUV8
  O//HoEA0ajQxjRvJdTskYK6nESOrr+geM477D5Dp3ZKl01ak0HHseJGcoHoMdZOW
  dcvAhtKZogLstrT1+qftJcsTAOMWsF4EkpoyPelutEyLrLjfzzSUKlb06x2lKxBt
  NoOUHRhhEXe42QMSMYgtT8wE+/LfeB5IMOP1CiC1dGxBjZkZTtSYTSbcB+52H4xi
  LhTTEp59/yS6InuJUB6ZzgLGhJoCVg8ZSgSbnngy6Yc4lJpRONlzP7l6A/ins0aA
  6PvGBWyEAP+P+6xNVpDkrUPKVIFZDfMMCLVm1sicOgtEBInEpeqhiOygnpO5u12P
  IeDCClMkUbhtwTpgVszUe4OA2EXo
  #mongodb_keyfile_content: |

# Steps to generating the Nodebb auth token
# 1. Login to Nodebb (https://<domain-name>/discussions/login) as a Admin.
# 2. Go to admin panel and click on Plugin -> Install Plugins
# 3. Go to Installed Pluging, Activate All Plugins. Click on Dashboard and Click Rebuild and Restart
# 4. Again vist Admin Panel post restart -> Click on Plugins => Write API
# 5. Under MASTER TOKENS section, click on create token button, It will generate a token.
discussionsmw_nodebb_authorization_token:    # Read the comment above to generate this key
core_vault_mail_server_password: "12345"                      # Email server password


#Reset and set it to developer.google.com
# Oauth keys
core_vault_sunbird_google_oauth_clientId_portal: 624891408424-54kt33fa35pb0a3sl82n24j7ogp8gebh.apps.googleusercontent.com         # Google oauth client id
core_vault_sunbird_google_oauth_clientSecret_portal: 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     # Google oauth client secret
core_vault_sunbird_google_captcha_site_key_portal: 6Le4UtMhAAAAAFyoW1AzwwlXjunUm6Ur2NJ6suHO      # Google recaptch site key
google_captcha_private_key:  6Le4UtMhAAAAAKYLkJjE462_dQlu82bVHq0TUVqo                            # Google recaptch private key

# ------------------------------------------------------------------------------------------------------------ #
# Optional variables - Can be left blank if you dont plan to use the intended features
core_vault_monitor_alerts_slack_url: ""                  # Slack webhook for alerts from alertmanager
core_vault_msg_91_auth_key:                              # API key for sending OTP SMS

# Oauth for logger kibana
core_vault_kibana_google_client_id:                      # You can use the same outh client id that we used for portal
core_vault_kibana_google_client_secret:                  # You can use the same outh client secret that we used for portal

vault_core_url_shortner_access_token: ""                 # Url shortner access token if you want to shorten urls like forgot password link etc using an external service like bit.ly

### IMPORTANT! ###
### NOTE: FOR A REAL ENVIRONMENT YOU MUST CHANGE THE BELOW VALUES TO SOMETHING VERY SECRET WHICH ONLY YOU WILL KNOW! DO NOT USE THE DEFAULTS FOR REAL ENVIRONMENTS! ###
# ------------------------------------------------------------------------------------------------------------ #
# Sensible defaults which you need not change if you are just trying Sunbird - You should change these to something unique for real environments and not use the defaults

core_vault_keycloak_api_management_user_password: admin
core_vault_keystore_password: password                                                           # Password for encrypting data in cassandra
core_vault_sunbird_sso_username: admin                                                           # Keycloak SSO username
core_vault_sunbird_sso_password: admin                                                           # Keycloak SSO password
core_vault_keycloak_password: admin                                                              # Keycloak admin password
core_vault_grafana_admin_password: sunbird                                                       # Grafana admin password
core_vault_truststore_password: sunbird                                                          # Password for cassandra trust store
core_vault_proxy_prometheus_admin_creds: admin                                                   # Prometheus admin password
core_vault_postgres_username: postgres                                                           # Postgres user name
core_vault_grafana_editor_password: sunbird                                                      # Grafana editor user password

# ------------------------------------------------------------------------------------------------------------ #
# Sensible defaults which you need not change - But if you would like to change, you are free to do so

core_vault_grafana_dashboards_git_repo_url_with_credentails: "https://github.com/project-sunbird/grafana-dashboards.git"
# Changing the sessions secret value will invalidate all existing sessions.
# In order to rotate the secret without invalidating sessions, provide an array of secrets,
# with the new secret as first element of the array, and followed by previous secrets.
sunbird_portal_session_secret: "long-secret-to-calm-entropy-gods"    # Portal session secret
nodebb_admin_password: MySecretPassword                              # Nodebb admin password
core_vault_enc_entry_password: password                              # encryption password for the enc service
core_vault_enc_master_pass: password                                 # encryption password for the keys
core_vault_kibana_cookie_secret: long-secret-to-calm-entropy-gods    # Cookie secret for kibana Oauth
dp_play_http_secret_key: "long-secret-to-calm-entropy-gods"          # Random 32+ character string
core_vault_graph_passport_key: "long-secret-to-calm-entropy-gods"    # Should be same as lp_vault_graph_passport_key from KP secrets.yml
crypto_encryption_key: "long-secret-to-calm-entropy-gods" # any crypto key of 32 bit length, used by portal to encrypt and decrypt the userDetails for forgot password flow
sunbird_api_auth_token_bot: "{{ core_vault_sunbird_api_auth_token }}"

# Adding an secrets related to ML-services
# Azure token
ml_analytics_azure_sas_token: Azuretoken
# Druid project injestion data-source-spec
ml_analytics_druid_project_injestion_spec: DruidProjectIngestionSpec 
ml_analytics_druid_observation_status_injestion_spec: DruidObeservationStatusIngestionSpec
# Jwt token of ML API
ml_analytics_api_access_token: ApiAccessToken
# ML authorization key

sunbird_anonymous_register_token: "{{core_vault_sunbird_api_auth_token}}"
sunbird_loggedin_register_token: "{{core_vault_sunbird_api_auth_token}}"
sunbird_anonymous_default_token: "{{core_vault_sunbird_api_auth_token}}"
sunbird_logged_default_token: "{{core_vault_sunbird_api_auth_token}}"